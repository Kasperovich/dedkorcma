@using DedKorchma.Helpers
@model DedKorchma.Models.ViewModels.Common.IndexViewModel

@{
    ViewBag.Title = "Новости";
}

    <div class="container">
        <div class="form-account">
            <div class="row">
                <div class="col-md-10">
                    <h2>Новости</h2>
                    @if (Request.IsAuthenticated)
                    {
                        <p>
                            @Html.ActionLink("Создать", "CreateNews")
                        </p>
                    }
                    <hr />
                    @foreach (var item in Model.News)
                    {
                        <div class="news__item">
                            <div class="news__item__img col-md-3" style="background-image: url(@Url.Content(item.HeadImage))">
                                <div class="news__item__delete-block">
                                    <div class="news__item__delete-block__content">
                                        <div class="news__item__delete-block__text">
                                            <span>Вы уверены ?</span>
                                        </div>
                                        <div class="news__item__delete-block__button">
                                            @Html.HiddenFor(modelItem => item.Id)
                                            <span class="delete-block__button__Yes">Да </span> |<span class="delete-block__button__No"> Отмена</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="news__item__title">
                                    <a href="@Url.Action("DetailsNews", new { url = item.UrlPath })"> <h3> @Html.DisplayFor(modelItem => item.Name)</h3></a>
                                </div>
                                <div class="news__item__date ne">
                                    @Html.DisplayFor(modelItem => item.DateCreated)
                                </div>
                                <div class="news__item__shortdescription">
                                    @Html.DisplayFor(modelItem => item.ShortDescription)
                                </div>
                                <div class="news__item__links">
                                    @Html.ActionLink("Перейти к новости", "DetailsNews", new { url = item.UrlPath })
                                    @if (Request.IsAuthenticated)
                                    {
                                        <span>|</span>
                                        @Html.ActionLink("Редактировать", "EditNews", new { id = item.Id })
                                        <span>|</span>
                                        <span class="news__item__links__delete-news">Удалить</span>
                                    }

                                </div>
                                <hr />
                                @if (Request.IsAuthenticated)
                                {
                                    <div class="news__item__seo">
                                        <span class="news__item__seo__attr">Активация :@item.IsDeleted</span><br />
                                        <span class="news__item__seo__attr">SEO Title (количество символов: @item.Title.Length):</span>
                                        <div class="news__item__title">
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </div>
                                        <span class="news__item__seo__attr">SEO Path (количество символов: @item.UrlPath.Length):</span>
                                        <div class="news__item__path">
                                            @Html.DisplayFor(modelItem => item.UrlPath)
                                        </div>
                                        <span class="news__item__seo__attr">SEO Body (количество символов: @item.Body.Length):</span>
                                        <div class="news__item__body">
                                            @Html.Raw(item.Body)
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 text-center">
                    @Html.Pagination(Model.Pagination, x => Url.Action("Index", new { page = x }))
                </div>
            </div>
        </div>
</div>
@section scripts
{
    <script>
        $('body')
            .on("click",
                ".news__item__links__delete-news",
                function(e) {
                    $(this).parents().find(".news__item__delete-block").slideUp();
                    $(this)
                        .parent()
                        .parent()
                        .siblings(".news__item__img ")
                        .children(".news__item__delete-block")
                        .slideDown();
                });

        $('body')
            .on("click",
                ".delete-block__button__No",
                function(e) {
                    $(this).parents().find(".news__item__delete-block").slideUp();
                });
        $('body').on("click", ".delete-block__button__Yes",function(e) {
            $(this).parent().parent().parent().parent().parent().css("display", "none");
            var newsId = $(this).parent().find("#item_Id").val();
            console.log(newsId);
            $.ajax({
                beforeSend: function() {
                },
                type: 'POST',
                data: { newsId: newsId },
                url: '/News/DeleteNews'
        });
        });
    </script>
}
