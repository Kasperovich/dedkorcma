@model DedKorchma.Models.ViewModels.GalleryViewModel.EditAlbumViewModel

@{
    ViewBag.Title = "Редактировать";
}
<div class="container">
    <div class="form-account">
        <h2>Редактировать</h2>
        <div>
            @Html.ActionLink("Вернутся в галерею", "Index")
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-10 float-right">
                            <div class="headimage-block">
                                <img class="headPhoto img-responsive" src="" alt="" style="display: none;" />
                                <div class="overlay black">
                                    <span class="change-image">изменить картинку</span>
                                </div>
                            </div>
                        </div>
                        <div class="dropzone col-md-10 float-right" id="gallarytHeadImageDropZone"> </div>

                        @Html.HiddenFor(s => s.HeadImage)
                        @Html.ValidationMessageFor(m => m.HeadImage, "", new { @class = "text-danger" })

                    </div>
                </div>
                <br />
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AlbumId)
                <div class="form-group">
                    @Html.LabelFor(model => model.NameOfAlbum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NameOfAlbum, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NameOfAlbum, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HeadImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HeadImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HeadImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UrlPath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UrlPath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UrlPath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>
@section css{
    <link href="~/Content/css/lightbox.min.css" rel="stylesheet" />
    <link href="~/Content/css/dropzone.css" rel="stylesheet" />
    <link href="~/Content/css/basic.css" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/dropzone.js"></script>

    <script>
        $(function () {
            $('#DateCreated').datetimepicker({
                format: 'YYYY-MM-DD HH:mm',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
                stepping: 15,
                locale: 'ru'
            });
        });

            Dropzone.options.gallarytHeadImageDropZone = {
                url: "/gallery/SaveGalleryHeadPhoto",
                addRemoveLinks: true,
                autoProcessQueue: true,
                autoDiscover: false,
                clickable: true,
                maxFiles: 1,
                uploadMultiple: false,
                dictDefaultMessage: "Что бы изменить заглавную картинку нажмите сюда либо перетяните картинку в эту область",
                success: function (file, response) {
                    $(".headPhoto").attr("src", response.url);
                    $("#HeadImage").val(response.fileName);
                    this.removeAllFiles(true);
                    $(".headPhoto").slideDown(200);
                    $("#gallarytHeadImageDropZone").slideUp(200);
                }
            }
            $(".headimage-block .overlay.black").click(function () {
                $(".headPhoto").slideUp(200);
                $("#gallarytHeadImageDropZone").slideDown(200);
            });
    </script>
}